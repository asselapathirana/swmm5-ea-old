import sys
import os

sys.path.append(".."+os.sep+os.sep+"service")

"""Create a stand-alone executable"""

try:
    from guidata.disthelpers import Distribution
    import guidata.configtools as gc
except ImportError:
    raise ImportError, "This script requires guidata 1.4+"



import swmm_ea_controller as sc

def create_executable():
    """Build executable using ``guidata.disthelpers``"""
    dist = Distribution()
    dist.setup(name=sc.NAME, version=sc.VERSION,
               description=sc.DESCRIPTION,
               script="swmm5ec_.pyw", target_name=sc.TARGET,
    icon="../res/DNA.ico")
    dist.add_modules('guidata', 'guiqwt')
    # Building executable
    dist.build('cx_Freeze')
    
def create_setupscript():
    template=r"""; Script generated by the Inno Setup Script Wizard.
    ; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
    
    #define MyAppName "%(name)s"
    #define MyAppVersion "%(version)s"
    #define MyAppPublisher "%(publisher)s"
    #define MyAppURL "%(url)s"
    #define MyAppExeName "%(exename)s"
    #define MyOutputBaseName "%(outputbasename)s"
    
    
    [Setup]
    ; NOTE: The value of AppId uniquely identifies this application.
    ; Do not use the same AppId value in installers for other applications.
    ; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
    AppId={{92A4F79D-E285-4878-AA00-81E16CAE3650}
    AppName={#MyAppName}
    AppVersion={#MyAppVersion}
    ;AppVerName={#MyAppName} {#MyAppVersion}
    AppPublisher={#MyAppPublisher}
    AppPublisherURL={#MyAppURL}
    AppSupportURL={#MyAppURL}
    AppUpdatesURL={#MyAppURL}
    DefaultDirName={pf}\{#MyAppName}
    DefaultGroupName={#MyAppName}
    AllowNoIcons=yes
    LicenseFile=license.txt
    InfoBeforeFile=README.txt
    InfoAfterFile=POST_INSTALL.txt
    OutputBaseFilename={#MyOutputBaseName}
    SetupIconFile=..\res\DNA.ico
    Compression=lzma
    SolidCompression=yes
    
    [Languages]
    Name: "english"; MessagesFile: "compiler:Default.isl"
    
    [Tasks]
    Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
    Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1
    
    [Files]
    Source: "dist\swmm5ec.exe"; DestDir: "{app}"; Flags: ignoreversion
    ; NOTE: Don't use "Flags: ignoreversion" on any shared system files
    Source: "dist\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
    
    [Icons]
    Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
    Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"
    Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
    Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
    Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon
    
    [Run]
    Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent
    """
    
    f=open("install.iss","w")
    import swmm_ea_controller as sc
    f.write(template % { "name" : sc.NAME
                        ,"version": sc.VERSION
                        ,"publisher": sc.PUBLISHER
                        ,"url": sc.URL
                        ,"exename": sc.TARGET, 
                        "outputbasename": sc.SETUPNAME})
    f.close()
    

if __name__ == '__main__':
    create_executable()
    create_setupscript()
